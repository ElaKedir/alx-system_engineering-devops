CHMOD(1)                     User Commands                     CHMOD(1)

NNAAMMEE
       chmod - change file mode bits

SSYYNNOOPPSSIISS
       cchhmmoodd [_O_P_T_I_O_N]... _M_O_D_E[_,_M_O_D_E]... _F_I_L_E...
       cchhmmoodd [_O_P_T_I_O_N]... _O_C_T_A_L_-_M_O_D_E _F_I_L_E...
       cchhmmoodd [_O_P_T_I_O_N]... _-_-_r_e_f_e_r_e_n_c_e_=_R_F_I_L_E _F_I_L_E...

DDEESSCCRRIIPPTTIIOONN
       This  manual  page  documents  the  GNU version of cchhmmoodd.  cchhmmoodd
       changes the file mode bits of each given file according to _m_o_d_e,
       which  can  be  either  a  symbolic representation of changes to
       make, or an octal number representing the bit  pattern  for  the
       new mode bits.

       The  format of a symbolic mode is [uuggooaa...][[--++==][_p_e_r_m_s...]...],
       where _p_e_r_m_s is either zero or more letters from the set  rrwwxxXXsstt,
       or  a  single  letter from the set uuggoo.  Multiple symbolic modes
       can be given, separated by commas.

       A combination of the letters uuggooaa controls which  users'  access
       to  the  file  will  be changed: the user who owns it (uu), other
       users in the file's group (gg), other users  not  in  the  file's
       group  (oo),  or  all users (aa).  If none of these are given, the
       effect is as if (aa) were given, but bits that  are  set  in  the
       umask are not affected.

       The operator ++ causes the selected file mode bits to be added to
       the existing file mode bits of each file; -- causes  them  to  be
       removed;  and  ==  causes them to be added and causes unmentioned
       bits to be removed except that  a  directory's  unmentioned  set
       user and group ID bits are not affected.

       The letters rrwwxxXXsstt select file mode bits for the affected users:
       read (rr), write (ww), execute (or search  for  directories)  (xx),
       execute/search  only  if  the file is a directory or already has
       execute permission for some user (XX), set user or  group  ID  on
       execution  (ss), restricted deletion flag or sticky bit (tt).  In‐
       stead of one or more of these letters, you can  specify  exactly
       one  of the letters uuggoo: the permissions granted to the user who
       owns the file (uu), the permissions granted to  other  users  who
       are members of the file's group (gg), and the permissions granted
       to users that are in neither of  the  two  preceding  categories
       (oo).

       A  numeric  mode is from one to four octal digits (0-7), derived
       by adding up the bits with values 4, 2, and 1.   Omitted  digits
       are  assumed  to  be leading zeros.  The first digit selects the
       set user ID (4) and set group ID (2) and restricted deletion  or
       sticky (1) attributes.  The second digit selects permissions for
       the user who owns the file: read (4),  write  (2),  and  execute
       (1); the third selects permissions for other users in the file's
       group, with the same values; and the fourth for other users  not
       in the file's group, with the same values.

       cchhmmoodd never changes the permissions of symbolic links; the cchhmmoodd
       system call cannot change their  permissions.   This  is  not  a
       problem  since the permissions of symbolic links are never used.
       However, for each symbolic link  listed  on  the  command  line,
       cchhmmoodd  changes  the permissions of the pointed-to file.  In con‐
       trast, cchhmmoodd ignores symbolic links encountered during recursive
       directory traversals.

SSEETTUUIIDD AANNDD SSEETTGGIIDD BBIITTSS
       cchhmmoodd  clears  the  set-group-ID  bit  of  a regular file if the
       file's group ID does not match the user's effective group ID  or
       one  of  the user's supplementary group IDs, unless the user has
       appropri